// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upload_dropbox_service.proto

package upload_dropbox_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UploadInfo struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	FullPath             string   `protobuf:"bytes,2,opt,name=fullPath,proto3" json:"fullPath,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadInfo) Reset()         { *m = UploadInfo{} }
func (m *UploadInfo) String() string { return proto.CompactTextString(m) }
func (*UploadInfo) ProtoMessage()    {}
func (*UploadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_upload_dropbox_service_52c61127e8555cf3, []int{0}
}
func (m *UploadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadInfo.Unmarshal(m, b)
}
func (m *UploadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadInfo.Marshal(b, m, deterministic)
}
func (dst *UploadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadInfo.Merge(dst, src)
}
func (m *UploadInfo) XXX_Size() int {
	return xxx_messageInfo_UploadInfo.Size(m)
}
func (m *UploadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UploadInfo proto.InternalMessageInfo

func (m *UploadInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UploadInfo) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

func (m *UploadInfo) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResponseResult struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseResult) Reset()         { *m = ResponseResult{} }
func (m *ResponseResult) String() string { return proto.CompactTextString(m) }
func (*ResponseResult) ProtoMessage()    {}
func (*ResponseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_upload_dropbox_service_52c61127e8555cf3, []int{1}
}
func (m *ResponseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseResult.Unmarshal(m, b)
}
func (m *ResponseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseResult.Marshal(b, m, deterministic)
}
func (dst *ResponseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseResult.Merge(dst, src)
}
func (m *ResponseResult) XXX_Size() int {
	return xxx_messageInfo_ResponseResult.Size(m)
}
func (m *ResponseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseResult.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseResult proto.InternalMessageInfo

func (m *ResponseResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*UploadInfo)(nil), "UploadInfo")
	proto.RegisterType((*ResponseResult)(nil), "ResponseResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DropboxServiceClient is the client API for DropboxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DropboxServiceClient interface {
	Upload(ctx context.Context, in *UploadInfo, opts ...grpc.CallOption) (*ResponseResult, error)
	Ping(ctx context.Context, in *UploadInfo, opts ...grpc.CallOption) (*ResponseResult, error)
}

type dropboxServiceClient struct {
	cc *grpc.ClientConn
}

func NewDropboxServiceClient(cc *grpc.ClientConn) DropboxServiceClient {
	return &dropboxServiceClient{cc}
}

func (c *dropboxServiceClient) Upload(ctx context.Context, in *UploadInfo, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/DropboxService/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxServiceClient) Ping(ctx context.Context, in *UploadInfo, opts ...grpc.CallOption) (*ResponseResult, error) {
	out := new(ResponseResult)
	err := c.cc.Invoke(ctx, "/DropboxService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DropboxServiceServer is the server API for DropboxService service.
type DropboxServiceServer interface {
	Upload(context.Context, *UploadInfo) (*ResponseResult, error)
	Ping(context.Context, *UploadInfo) (*ResponseResult, error)
}

func RegisterDropboxServiceServer(s *grpc.Server, srv DropboxServiceServer) {
	s.RegisterService(&_DropboxService_serviceDesc, srv)
}

func _DropboxService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DropboxService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServiceServer).Upload(ctx, req.(*UploadInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _DropboxService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DropboxService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServiceServer).Ping(ctx, req.(*UploadInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _DropboxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DropboxService",
	HandlerType: (*DropboxServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upload",
			Handler:    _DropboxService_Upload_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _DropboxService_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "upload_dropbox_service.proto",
}

func init() {
	proto.RegisterFile("upload_dropbox_service.proto", fileDescriptor_upload_dropbox_service_52c61127e8555cf3)
}

var fileDescriptor_upload_dropbox_service_52c61127e8555cf3 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x2d, 0xc8, 0xc9,
	0x4f, 0x4c, 0x89, 0x4f, 0x29, 0xca, 0x2f, 0x48, 0xca, 0xaf, 0x88, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb,
	0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0xe2, 0xe2, 0x0a, 0x05, 0xcb, 0x7b,
	0xe6, 0xa5, 0xe5, 0x0b, 0x89, 0x70, 0xb1, 0x96, 0xe4, 0x67, 0xa7, 0xe6, 0x49, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x41, 0x38, 0x42, 0x52, 0x5c, 0x1c, 0x69, 0xa5, 0x39, 0x39, 0x01, 0x89, 0x25,
	0x19, 0x12, 0x4c, 0x60, 0x09, 0x38, 0x5f, 0x48, 0x88, 0x8b, 0x25, 0x25, 0xb1, 0x24, 0x51, 0x82,
	0x59, 0x81, 0x51, 0x83, 0x27, 0x08, 0xcc, 0x56, 0xd2, 0xe2, 0xe2, 0x0b, 0x4a, 0x2d, 0x2e, 0xc8,
	0xcf, 0x2b, 0x4e, 0x0d, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x11, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d,
	0x2e, 0x4e, 0x4c, 0x4f, 0x85, 0x9a, 0x0c, 0xe3, 0x1a, 0x25, 0x71, 0xf1, 0xb9, 0x40, 0x1c, 0x16,
	0x0c, 0x71, 0x97, 0x90, 0x06, 0x17, 0x1b, 0xc4, 0x45, 0x42, 0xdc, 0x7a, 0x08, 0xa7, 0x49, 0xf1,
	0xeb, 0xa1, 0x9a, 0xa9, 0xc4, 0x20, 0xa4, 0xc6, 0xc5, 0x12, 0x90, 0x99, 0x97, 0x4e, 0x48, 0x5d,
	0x12, 0x1b, 0xd8, 0xab, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xa2, 0xd8, 0x51, 0x0a,
	0x01, 0x00, 0x00,
}
